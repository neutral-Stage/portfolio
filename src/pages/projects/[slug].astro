---
import Layout from "../../layouts/Layout.astro";
import Navigation from "../../components/Navigation.svelte";
import { getProjects } from "../../lib/sanity";
import { urlFor } from "../../lib/sanity";
import type { Project } from "../../types/index";

export async function getStaticPaths() {
  const projects = await getProjects();

  return projects.map((project: Project) => ({
    params: { slug: project.slug.current },
    props: { project },
  }));
}

const { project }: { project: Project } = Astro.props;
const allProjects = await getProjects();
const relatedProjects = allProjects
  .filter(
    (p: Project) => p._id !== project._id && p.category === project.category
  )
  .slice(0, 3);
---

<Layout
  title={`${project.title} - Your Name`}
  description={project.description}
  image={project.image
    ? urlFor(project.image).width(1200).height(630).url()
    : undefined}
>
  <Navigation client:load />

  <main class="pt-16">
    <!-- Project Header -->
    <article class="py-16 px-4 sm:px-6 lg:px-8">
      <div class="max-w-6xl mx-auto">
        <!-- Breadcrumb -->
        <nav class="mb-8">
          <ol class="flex items-center space-x-2 text-sm text-gray-400">
            <li>
              <a
                href="/"
                class="hover:text-white transition-colors duration-300">Home</a
              >
            </li>
            <li class="text-gray-600">/</li>
            <li>
              <a
                href="/projects"
                class="hover:text-white transition-colors duration-300"
                >Projects</a
              >
            </li>
            <li class="text-gray-600">/</li>
            <li class="text-white">{project.title}</li>
          </ol>
        </nav>

        <div class="grid lg:grid-cols-2 gap-12 items-start">
          <!-- Project Images -->
          <div class="space-y-6">
            <!-- Main Image -->
            <div class="relative">
              {
                project.image ? (
                  <img
                    src={urlFor(project.image).width(600).height(400).url()}
                    alt={project.title}
                    class="w-full h-64 sm:h-80 lg:h-96 object-cover rounded-xl"
                  />
                ) : (
                  <div class="w-full h-64 sm:h-80 lg:h-96 bg-gradient-to-br from-purple-500/20 to-pink-500/20 rounded-xl flex items-center justify-center">
                    <div class="text-purple-400/50 text-8xl">🚀</div>
                  </div>
                )
              }
              {
                project.featured && (
                  <div class="absolute top-4 right-4">
                    <span class="bg-gradient-to-r from-purple-500 to-pink-500 text-white px-3 py-1 rounded-full text-xs font-semibold">
                      Featured
                    </span>
                  </div>
                )
              }
            </div>

            <!-- Gallery Images -->
            {
              project.gallery && project.gallery.length > 0 && (
                <div class="grid grid-cols-2 gap-4">
                  {project.gallery.slice(0, 4).map((image: any) => (
                    <img
                      src={urlFor(image).width(300).height(200).url()}
                      alt={project.title}
                      class="w-full h-32 object-cover rounded-lg hover:scale-105 transition-transform duration-300 cursor-pointer"
                    />
                  ))}
                </div>
              )
            }
          </div>

          <!-- Project Details -->
          <div class="space-y-8">
            <!-- Project Meta -->
            <div>
              <div class="flex items-center justify-between mb-4">
                <span
                  class="bg-purple-500/20 text-purple-300 px-3 py-1 rounded-full text-sm font-medium"
                >
                  {project.category}
                </span>
                <span
                  class={`px-3 py-1 rounded-full text-sm font-medium ${
                    project.status === "completed"
                      ? "bg-green-500/20 text-green-400"
                      : project.status === "in-progress"
                        ? "bg-yellow-500/20 text-yellow-400"
                        : "bg-gray-500/20 text-gray-400"
                  }`}
                >
                  {project.status}
                </span>
              </div>

              <h1
                class="text-3xl sm:text-4xl lg:text-5xl font-bold text-white mb-6 leading-tight"
              >
                {project.title}
              </h1>

              <p class="text-xl text-gray-300 leading-relaxed mb-6">
                {project.description}
              </p>

              {
                project.longDescription && (
                  <div class="prose prose-lg prose-invert max-w-none">
                    <p class="text-gray-300 leading-relaxed">
                      {project.longDescription}
                    </p>
                  </div>
                )
              }
            </div>

            <!-- Project Links -->
            <div class="flex flex-col sm:flex-row gap-4">
              {
                project.liveUrl && (
                  <a
                    href={project.liveUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="flex items-center justify-center px-6 py-3 bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white rounded-lg font-semibold transition-all duration-300 transform hover:scale-105"
                  >
                    <svg
                      class="w-5 h-5 mr-2"
                      fill="none"
                      stroke="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
                      />
                    </svg>
                    View Live Demo
                  </a>
                )
              }
              {
                project.githubUrl && (
                  <a
                    href={project.githubUrl}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="flex items-center justify-center px-6 py-3 border-2 border-purple-400 text-purple-400 hover:bg-purple-400 hover:text-white rounded-lg font-semibold transition-all duration-300 transform hover:scale-105"
                  >
                    <svg
                      class="w-5 h-5 mr-2"
                      fill="currentColor"
                      viewBox="0 0 24 24"
                    >
                      <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z" />
                    </svg>
                    View Source Code
                  </a>
                )
              }
            </div>

            <!-- Project Timeline -->
            {
              (project.startDate || project.endDate) && (
                <div class="bg-slate-800/50 rounded-xl p-6 border border-slate-700">
                  <h3 class="text-lg font-semibold text-white mb-4">
                    Project Timeline
                  </h3>
                  <div class="space-y-2">
                    {project.startDate && (
                      <div class="flex items-center text-gray-300">
                        <svg
                          class="w-4 h-4 mr-2 text-purple-400"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                          />
                        </svg>
                        <span>
                          Started:{" "}
                          {new Date(project.startDate).toLocaleDateString(
                            "en-US",
                            { year: "numeric", month: "long", day: "numeric" }
                          )}
                        </span>
                      </div>
                    )}
                    {project.endDate && (
                      <div class="flex items-center text-gray-300">
                        <svg
                          class="w-4 h-4 mr-2 text-purple-400"
                          fill="none"
                          stroke="currentColor"
                          viewBox="0 0 24 24"
                        >
                          <path
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            stroke-width="2"
                            d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"
                          />
                        </svg>
                        <span>
                          Completed:{" "}
                          {new Date(project.endDate).toLocaleDateString(
                            "en-US",
                            { year: "numeric", month: "long", day: "numeric" }
                          )}
                        </span>
                      </div>
                    )}
                  </div>
                </div>
              )
            }

            <!-- Technologies Used -->
            <div>
              <h3 class="text-lg font-semibold text-white mb-4">
                Technologies Used
              </h3>
              <div class="flex flex-wrap gap-3">
                {
                  project.technologies.map((tech: string) => (
                    <span class="bg-slate-700/50 text-gray-300 px-4 py-2 rounded-full text-sm font-medium border border-slate-600 hover:border-purple-500/50 hover:text-purple-300 transition-colors duration-300">
                      {tech}
                    </span>
                  ))
                }
              </div>
            </div>
          </div>
        </div>
      </div>
    </article>

    <!-- Related Projects -->
    {
      relatedProjects.length > 0 && (
        <section class="py-16 px-4 sm:px-6 lg:px-8 bg-slate-800/30">
          <div class="max-w-6xl mx-auto">
            <h2 class="text-2xl font-semibold text-white mb-8">
              Related Projects
            </h2>
            <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
              {relatedProjects.map((relatedProject: Project) => (
                <article class="bg-slate-800/50 rounded-xl overflow-hidden border border-slate-700 hover:border-purple-500/50 transition-all duration-300">
                  <div class="relative h-48 bg-gradient-to-br from-purple-500/20 to-pink-500/20">
                    {relatedProject.image ? (
                      <img
                        src={urlFor(relatedProject.image)
                          .width(400)
                          .height(200)
                          .url()}
                        alt={relatedProject.title}
                        class="w-full h-full object-cover"
                      />
                    ) : (
                      <div class="absolute inset-0 flex items-center justify-center">
                        <div class="text-purple-400/50 text-4xl">🚀</div>
                      </div>
                    )}
                  </div>
                  <div class="p-6">
                    <div class="flex items-center justify-between mb-3">
                      <span class="text-purple-400 text-sm font-medium">
                        {relatedProject.category}
                      </span>
                      <span
                        class={`px-2 py-1 rounded-full text-xs font-medium ${
                          relatedProject.status === "completed"
                            ? "bg-green-500/20 text-green-400"
                            : relatedProject.status === "in-progress"
                              ? "bg-yellow-500/20 text-yellow-400"
                              : "bg-gray-500/20 text-gray-400"
                        }`}
                      >
                        {relatedProject.status}
                      </span>
                    </div>
                    <h3 class="text-lg font-semibold text-white mb-3 hover:text-purple-300 transition-colors duration-300">
                      <a href={`/projects/${relatedProject.slug.current}`}>
                        {relatedProject.title}
                      </a>
                    </h3>
                    <p class="text-gray-400 text-sm leading-relaxed">
                      {relatedProject.description}
                    </p>
                  </div>
                </article>
              ))}
            </div>
          </div>
        </section>
      )
    }

    <!-- Back to Projects -->
    <div class="py-8 px-4 sm:px-6 lg:px-8">
      <div class="max-w-6xl mx-auto text-center">
        <a
          href="/projects"
          class="inline-flex items-center px-6 py-3 bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600 text-white rounded-lg font-semibold transition-all duration-300 transform hover:scale-105"
        >
          ← Back to Projects
        </a>
      </div>
    </div>
  </main>
</Layout>
